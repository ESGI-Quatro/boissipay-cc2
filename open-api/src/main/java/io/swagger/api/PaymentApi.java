/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.PaymentRequest;
import io.swagger.model.PaymentResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-05-30T20:56:34.719Z")

@Validated
@Api(value = "payment", description = "the payment API")
@RequestMapping(value = "/v2")
public interface PaymentApi {

    @ApiOperation(value = "Process transactional payment ", nickname = "pay", notes = "", response = PaymentResponse.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Payment done", response = PaymentResponse.class),
        @ApiResponse(code = 405, message = "Invalid input"),
        @ApiResponse(code = 500, message = "Servor error"),
        @ApiResponse(code = 503, message = "Gateway timeout") })
    @RequestMapping(value = "/payment",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<PaymentResponse> pay(@ApiParam(value = "Generate a transaction based on an amount and a user id" ,required=true )  @Valid @RequestBody PaymentRequest body);

}
